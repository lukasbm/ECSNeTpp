//
// Generated file, do not edit! Created by nedtool 5.1 from msg/Ack.msg.
//

#if defined(__clang__)
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __ECSNETPP_ACK_M_H
#define __ECSNETPP_ACK_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION != OMNETPP_VERSION)
#error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

namespace ecsnetpp
{

  /**
 * Class generated from <tt>msg/Ack.msg:21</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet Ack
 * {
 *     int ackedMessageId;
 *     string sender;
 * }
 * </pre>
 */
  class Ack : public ::omnetpp::cPacket
  {
  protected:
    int ackedMessageId;
    ::omnetpp::opp_string sender;

  private:
    void copy(const Ack &other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Ack &);

  public:
    Ack(const char *name = nullptr, short kind = 0);
    Ack(const Ack &other);
    virtual ~Ack();
    Ack &operator=(const Ack &other);
    virtual Ack *dup() const override { return new Ack(*this); }
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getAckedMessageId() const;
    virtual void setAckedMessageId(int ackedMessageId);
    virtual const char *getSender() const;
    virtual void setSender(const char *sender);
  };

  inline void doParsimPacking(omnetpp::cCommBuffer *b, const Ack &obj) { obj.parsimPack(b); }
  inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Ack &obj) { obj.parsimUnpack(b); }

} // namespace ecsnetpp

#endif // ifndef __ECSNETPP_ACK_M_H
